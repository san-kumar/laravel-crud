import{_ as e,c as t,o as a,a as i}from"./app.ca73af7b.js";const f=JSON.parse('{"title":"Authentication","description":"","frontmatter":{},"headers":[{"level":2,"title":"user_id field in table","slug":"user-id-field-in-table","link":"#user-id-field-in-table","children":[]},{"level":2,"title":"user_id in parent tables","slug":"user-id-in-parent-tables","link":"#user-id-in-parent-tables","children":[]}],"relativePath":"guide/authentication.md"}'),o={name:"guide/authentication.md"},r=i('<h1 id="authentication" tabindex="-1">Authentication <a class="header-anchor" href="#authentication" aria-hidden="true">#</a></h1><p>Laravel CRUD generator uses the default Laravel authentication package <a href="https://laravel.com/docs/7.x/authentication#included-routing" target="_blank" rel="noreferrer">laravel/ui</a> for handling user authentication. The CRUD generator will automatically add authentication to routes (using the <code>auth</code> middleware) and generate Policy classes for Models.</p><h2 id="user-id-field-in-table" tabindex="-1"><code>user_id</code> field in table <a class="header-anchor" href="#user-id-field-in-table" aria-hidden="true">#</a></h2><p>If you generate CRUD for any table that has a <code>user_id</code> field, then the generated CRUD will automatically generate a Policy file for the Model and add the <a href="https://laravel.com/docs/7.x/authorization#authorizing-actions-using-policies" target="_blank" rel="noreferrer"><code>authorizeResource</code></a> method to the Resource Controller.</p><h2 id="user-id-in-parent-tables" tabindex="-1"><code>user_id</code> in parent tables <a class="header-anchor" href="#user-id-in-parent-tables" aria-hidden="true">#</a></h2><p>If you generate CRUD for a table that has a <code>user_id</code> field in the parent tables (i.e. <code>authors.posts.comments</code> has a <code>user_id</code> field in the <code>authors</code> table), then the generated CRUD will automatically generate a Policy file for the <code>Authors</code> Model and add it to your Resource Controller in the appropriate places.</p><p>This way access to <code>posts</code> and <code>comments</code> will be restricted to the owner of the <code>authors</code> table only.</p>',7),n=[r];function d(l,c,s,h,u,p){return a(),t("div",null,n)}const b=e(o,[["render",d]]);export{f as __pageData,b as default};
